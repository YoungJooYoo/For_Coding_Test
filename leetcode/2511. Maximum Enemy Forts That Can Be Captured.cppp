class Solution 
{
public:
    int captureForts(const vector<int>& forts) 
    {
        const size_t LENGTH = forts.size();
        size_t start = 0;
        size_t end = 0;
        int maxCount = 0;

        while (start < LENGTH && end < LENGTH)
        {
            // start 인덱스로 1 or -1로 시작하는 지점 찾기, 그러면서 1로 시작하는지 -1로 시작하는지 기록
            while (start < LENGTH && forts[start] == ENEMY_FORT) 
            {
                ++start;
            }

            if (start >= LENGTH) 
            {
                break;
            }

            // 현재 지점에서 어떤 요새가 있는지 기록
            int fortType = forts[start];

            // end를 start 인덱스로 옮긴후, end 인덱스로 1로 시작하면 -1로 찾을때까지,
            // -1로 시작하면 1로 시작할때까지 0의 갯수를 카운트해서 count에 넣기
            end = start + 1;
            int count = 0;

            while (end < LENGTH && forts[end] == ENEMY_FORT) 
            {
                ++count;
                ++end;
            }

            // 요새가 교차되었을 때만 count를 갱신
            if (end < LENGTH && forts[end] == -fortType) 
            {
                maxCount = max(maxCount, count);
            }

            // start를 end로 이동하여 다음 영역을 탐색
            start = end;
        }

        return maxCount;
    }

private:
    enum
    {
        NO_FORT = -1,
        ENEMY_FORT = 0,
        MY_FORT = 1
    };
};

// https://leetcode.com/problems/maximum-enemy-forts-that-can-be-captured/description/

/*

### 2511. 최대 적 요새 포획

**난이도**: 쉬움

#### 문제 설명

0-인덱스 정수 배열 `forts`가 주어집니다. 이 배열의 길이는 `n`이며, 요새의 위치를 나타냅니다. `forts[i]`는 `-1`, `0`, 또는 `1`일 수 있으며 각각의 의미는 다음과 같습니다:

- `-1`은 해당 위치에 요새가 없음을 나타냅니다.
- `0`은 해당 위치에 적의 요새가 있음을 나타냅니다.
- `1`은 해당 위치에 당신의 요새가 있음을 나타냅니다.

이제 당신은 당신의 요새 중 하나에서 위치 `i`에서 빈 위치 `j`로 군대를 이동시키기로 결정했습니다. 이때 다음 조건을 만족해야 합니다:

- `0 <= i, j <= n - 1`
- 군대는 적의 요새만을 통과합니다. 구체적으로, `min(i,j) < k < max(i,j)`인 모든 `k`에 대해 `forts[k] == 0`이어야 합니다.
- 군대가 이동하는 동안 길에 있는 모든 적의 요새는 포획됩니다.

포획할 수 있는 최대 적 요새의 수를 반환하세요. 군대를 이동할 수 없거나, 당신의 요새가 하나도 없다면, 0을 반환하세요.

 

#### 예제 1:

- **입력**: `forts = [1,0,0,-1,0,0,0,0,1]`
- **출력**: `4`
- **설명**:
  - 위치 0에서 위치 3으로 군대를 이동하면, 1과 2 위치의 2개의 적 요새를 포획할 수 있습니다.
  - 위치 8에서 위치 3으로 군대를 이동하면, 1, 2, 4, 5 위치의 4개의 적 요새를 포획할 수 있습니다.
  - 따라서 포획할 수 있는 최대 적 요새의 수는 4입니다.

#### 예제 2:

- **입력**: `forts = [0,0,1,-1]`
- **출력**: `0`
- **설명**: 적의 요새를 포획할 수 있는 경우가 없으므로 0을 반환합니다.

 

#### 제약 조건:

- `1 <= forts.length <= 1000`
- `-1 <= forts[i] <= 1`

*/
