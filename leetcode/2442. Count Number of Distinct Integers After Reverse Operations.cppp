class Solution 
{
public:
    int countDistinctIntegers(const vector<int>& nums)
    {
        vector<int> numbers(nums);
        unordered_set<int> st;

        for (const auto& num : nums)
        {
            string number = to_string(num);
            reverse(number.begin(), number.end());
            numbers.push_back(stoi(number));
        }

        for (const auto num : numbers)
        {
            st.insert(num);
        }

        return st.size();
    }
};

// https://leetcode.com/problems/count-number-of-distinct-integers-after-reverse-operations/submissions/

/*
2442. 역순 연산 후의 서로 다른 정수 개수 세기

힌트

양의 정수로 이루어진 배열 nums가 주어집니다.
배열의 각 정수를 가져와서, 그 수의 자릿수를 역순으로 뒤집고 배열의 끝에 추가합니다. 
이 작업은 nums의 원래 정수들에 대해 적용해야 합니다.
최종 배열에서 서로 다른 정수의 개수를 반환하세요.

 

예제 1:

입력: nums = [1,13,10,12,31]
출력: 6
설명: 각 숫자의 역순을 포함한 후, 결과 배열은 [1,13,10,12,31,1,31,1,21,13]입니다.
추가된 역순 정수는 밑줄로 표시되어 있습니다. 숫자 10의 경우, 역순으로 뒤집으면 01이 되어 1이 됩니다.
이 배열에서 서로 다른 정수의 개수는 6개입니다 (1, 10, 12, 13, 21, 31).

예제 2:

입력: nums = [2,2,2]
출력: 1
설명: 각 숫자의 역순을 포함한 후, 결과 배열은 [2,2,2,2,2,2]입니다.
이 배열에서 서로 다른 정수의 개수는 1개입니다 (숫자 2).

 

제약 사항:

- 1 <= nums.length <= 10^5
- 1 <= nums[i] <= 10^6

*/
