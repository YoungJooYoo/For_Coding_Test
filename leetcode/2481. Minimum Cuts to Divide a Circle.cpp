class Solution 
{
public:
    int numberOfCuts(const int n) 
    {
        // 원이 홀수 -> 1:1 매칭
        // 원이 짝수 -> 나누기 2로 매칭
        if (n == 1) return 0;
        return (n % 2 == 0) ? (n / 2) : n;
    }
};

// https://leetcode.com/problems/minimum-cuts-to-divide-a-circle/description/

/*

### 문제 설명:

원 안에서의 유효한 자르기는 다음과 같은 방식으로 이루어질 수 있습니다:

1. 원의 중심을 지나가며 원의 가장자리에 있는 두 점을 지나는 직선으로 표현되는 자르기, 또는
2. 원의 중심을 지나가며 원의 가장자리에 있는 한 점을 지나는 직선으로 표현되는 자르기.

주어진 정수 `n`에 대해, 원을 `n`개의 동일한 조각으로 나누기 위해 필요한 최소 자르기 수를 반환하세요.

### 예제:

**예제 1:**

- 입력: `n = 4`
- 출력: `2`
- 설명: 
  - 위 그림에서 원의 중심을 가로지르는 두 번의 자르기가 원을 4개의 동일한 조각으로 나눕니다.

**예제 2:**

- 입력: `n = 3`
- 출력: `3`
- 설명:
  - 원을 3개의 동일한 조각으로 나누려면 최소 3번의 자르기가 필요합니다. 
  - 3번 이하로 자르면 동일한 크기와 모양의 3개의 조각으로 나눌 수 없습니다.
  - 첫 번째 자르기는 원을 별도의 부분으로 나누지 않음을 유의하세요.

### 제약 사항:

- `1 <= n <= 100`

이 문제의 핵심은 원을 `n`개의 동일한 조각으로 나누기 위해 필요한 자르기의 최소 횟수를 계산하는 것입니다.

*/
